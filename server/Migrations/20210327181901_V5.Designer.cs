// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

namespace server.Migrations
{
    [DbContext(typeof(KafeterijaContext))]
    [Migration("20210327181901_V5")]
    partial class V5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Models.Kafeterija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojStolova")
                        .HasColumnType("int")
                        .HasColumnName("BrojStolova");

                    b.Property<int?>("MeniID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("MeniID");

                    b.ToTable("Kafeterija");
                });

            modelBuilder.Entity("server.Models.Meni", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Meni");
                });

            modelBuilder.Entity("server.Models.Pice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<int?>("MeniID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("MeniID");

                    b.ToTable("Pice");
                });

            modelBuilder.Entity("server.Models.PiceSto", b =>
                {
                    b.Property<int>("PiceID")
                        .HasColumnType("int")
                        .HasColumnName("PiceID");

                    b.Property<int>("StoID")
                        .HasColumnType("int")
                        .HasColumnName("StoID");

                    b.Property<int>("BrojPica")
                        .HasColumnType("int")
                        .HasColumnName("BrojPica");

                    b.HasKey("PiceID", "StoID");

                    b.HasIndex("StoID");

                    b.ToTable("PiceSto");
                });

            modelBuilder.Entity("server.Models.Sto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KafeterijaID")
                        .HasColumnType("int");

                    b.Property<int?>("MeniID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KafeterijaID");

                    b.HasIndex("MeniID");

                    b.ToTable("Sto");
                });

            modelBuilder.Entity("server.Models.Kafeterija", b =>
                {
                    b.HasOne("server.Models.Meni", "Meni")
                        .WithMany()
                        .HasForeignKey("MeniID");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("server.Models.Pice", b =>
                {
                    b.HasOne("server.Models.Meni", null)
                        .WithMany("Stavke")
                        .HasForeignKey("MeniID");
                });

            modelBuilder.Entity("server.Models.PiceSto", b =>
                {
                    b.HasOne("server.Models.Pice", "Pice")
                        .WithMany("Veza")
                        .HasForeignKey("PiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Sto", "Sto")
                        .WithMany("Veza")
                        .HasForeignKey("StoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pice");

                    b.Navigation("Sto");
                });

            modelBuilder.Entity("server.Models.Sto", b =>
                {
                    b.HasOne("server.Models.Kafeterija", null)
                        .WithMany("Stolovi")
                        .HasForeignKey("KafeterijaID");

                    b.HasOne("server.Models.Meni", "Meni")
                        .WithMany()
                        .HasForeignKey("MeniID");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("server.Models.Kafeterija", b =>
                {
                    b.Navigation("Stolovi");
                });

            modelBuilder.Entity("server.Models.Meni", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("server.Models.Pice", b =>
                {
                    b.Navigation("Veza");
                });

            modelBuilder.Entity("server.Models.Sto", b =>
                {
                    b.Navigation("Veza");
                });
#pragma warning restore 612, 618
        }
    }
}
